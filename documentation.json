{
    "pipes": [],
    "interfaces": [
        {
            "name": "DataResponse",
            "id": "interface-DataResponse-807d69a1aec49aa7a2a13d37b0c4c2d914f8f5c7068016bd4e9e4a18db4afdb9892fdeb221b01fd5bde7ed9a1f9ae4f8c6ac0157bc567e72f4e06bc6d482fdba",
            "file": "src/app/interfaces/data-response.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataResponse {\r\n    error?: number;\r\n    data: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "File",
            "id": "interface-File-b81615eb9ce2840721ffe8fea1a0f6b8db36ab370b86de498155201787afb903cee0da01d4cebe54065ac97f59bab15fa14f8b8441c209a8d0ef0bee5d6e8245",
            "file": "src/app/interfaces/file.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface File {\r\n    id?: number;\r\n    name: string;\r\n    device: string;\r\n    path: string;\r\n    status: FileStatus;\r\n}\r\n\r\nexport enum FileStatus {\r\n    Scheduled = \"scheduled\",\r\n    Available = \"available\",\r\n    Unknown = \"unknown\",\r\n}\r\n",
            "properties": [
                {
                    "name": "device",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FileStatus",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "FilesService",
            "id": "injectable-FilesService-79227a761c61c3f675bcde4cb31e689d8c1a506d4b604fc59ca036d3f639c9ee74e1a7fe4a75522ca5835c76111dfec90e6d47aa351b9e49e4a7d2eb9ead5a27",
            "file": "src/app/services/files.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<File[]>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { DataResponse } from '../interfaces/data-response';\nimport { File } from '../interfaces/file';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilesService {\n  constructor(private http: HttpClient) { }\n\n  public getFiles(): Observable<File[]>\n  {\n    const url = '/assets/data/files.json';\n\n    // @TODO: Should have error handling\n    return this.http.get<DataResponse>(url).pipe(map((res: DataResponse) => {return res.data}));\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-06b8ed728562614aa6790df3649e5333f9cbffcdec61e67c9d31840b722d3fcb30a6a9bfeb44642e9bb5a99bc8f63e243896c616e9688cfc79fcc5623c9f75aa",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'filedownloads'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'filedownloads';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<style>\r\n  :host {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\r\n    font-size: 14px;\r\n    color: #333;\r\n    box-sizing: border-box;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 8px 0;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n\r\n  .spacer {\r\n    flex: 1;\r\n  }\r\n\r\n  .toolbar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 60px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  .content {\r\n    display: flex;\r\n    margin: 82px auto 32px;\r\n    padding: 0 16px;\r\n    max-width: 960px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  svg.material-icons {\r\n    height: 24px;\r\n    width: auto;\r\n  }\r\n\r\n  svg.material-icons:not(:last-child) {\r\n    margin-right: 8px;\r\n  }\r\n\r\n  .card svg.material-icons path {\r\n    fill: #888;\r\n  }\r\n\r\n  .card-container {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 16px;\r\n  }\r\n\r\n  .card {\r\n    all: unset;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n    background-color: #fafafa;\r\n    height: 40px;\r\n    width: 200px;\r\n    margin: 0 8px 16px;\r\n    padding: 16px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: all 0.2s ease-in-out;\r\n    line-height: 24px;\r\n  }\r\n\r\n  .card-container .card:not(:last-child) {\r\n    margin-right: 0;\r\n  }\r\n\r\n  .card.card-small {\r\n    height: 16px;\r\n    width: 168px;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card) {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 4px 17px rgba(0, 0, 0, 0.35);\r\n  }\r\n\r\n  .card-container .card:not(.highlight-card):hover .material-icons path {\r\n    fill: rgb(105, 103, 103);\r\n  }\r\n\r\n  .card.highlight-card {\r\n    background-color: #1976d2;\r\n    color: white;\r\n    font-weight: 600;\r\n    border: none;\r\n    width: auto;\r\n    min-width: 30%;\r\n    position: relative;\r\n  }\r\n\r\n  .card.card.highlight-card span {\r\n    margin-left: 60px;\r\n  }\r\n\r\n  svg#rocket {\r\n    width: 80px;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: -24px;\r\n  }\r\n\r\n  svg#rocket-smoke {\r\n    height: calc(100vh - 95px);\r\n    position: absolute;\r\n    top: 10px;\r\n    right: 180px;\r\n    z-index: -10;\r\n  }\r\n\r\n  a,\r\n  a:visited,\r\n  a:hover {\r\n    color: #1976d2;\r\n    text-decoration: none;\r\n  }\r\n\r\n  a:hover {\r\n    color: #125699;\r\n  }\r\n\r\n  .terminal {\r\n    position: relative;\r\n    width: 80%;\r\n    max-width: 600px;\r\n    border-radius: 6px;\r\n    padding-top: 45px;\r\n    margin-top: 8px;\r\n    overflow: hidden;\r\n    background-color: rgb(15, 15, 16);\r\n  }\r\n\r\n  .terminal::before {\r\n    content: \"\\2022 \\2022 \\2022\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 4px;\r\n    background: rgb(58, 58, 58);\r\n    color: #c2c3c4;\r\n    width: 100%;\r\n    font-size: 2rem;\r\n    line-height: 0;\r\n    padding: 14px 0;\r\n    text-indent: 4px;\r\n  }\r\n\r\n  .terminal pre {\r\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\r\n    color: white;\r\n    padding: 0 1rem 1rem;\r\n    margin: 0;\r\n  }\r\n\r\n  .circle-link {\r\n    height: 40px;\r\n    width: 40px;\r\n    border-radius: 40px;\r\n    margin: 8px;\r\n    background-color: white;\r\n    border: 1px solid #eeeeee;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n    transition: 1s ease-out;\r\n  }\r\n\r\n  .circle-link:hover {\r\n    transform: translateY(-0.25rem);\r\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  footer {\r\n    margin-top: 8px;\r\n    display: flex;\r\n    align-items: center;\r\n    line-height: 20px;\r\n  }\r\n\r\n  footer a {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .github-star-badge {\r\n    color: #24292e;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 12px;\r\n    padding: 3px 10px;\r\n    border: 1px solid rgba(27,31,35,.2);\r\n    border-radius: 3px;\r\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\r\n    margin-left: 4px;\r\n    font-weight: 600;\r\n  }\r\n\r\n  .github-star-badge:hover {\r\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\r\n    border-color: rgba(27,31,35,.35);\r\n    background-position: -.5em;\r\n  }\r\n\r\n  .github-star-badge .material-icons {\r\n    height: 16px;\r\n    width: 16px;\r\n    margin-right: 4px;\r\n  }\r\n\r\n  img#clouds {\r\n    position: fixed;\r\n    bottom: -160px;\r\n    left: -230px;\r\n    z-index: -10;\r\n    width: 1920px;\r\n  }\r\n\r\n  /* Responsive Styles */\r\n  @media screen and (max-width: 767px) {\r\n    .card-container > *:not(.circle-link) ,\r\n    .terminal {\r\n      width: 100%;\r\n    }\r\n\r\n    .card:not(.highlight-card) {\r\n      height: 16px;\r\n      margin: 8px 0;\r\n    }\r\n\r\n    .card.highlight-card span {\r\n      margin-left: 72px;\r\n    }\r\n\r\n    svg#rocket-smoke {\r\n      right: 120px;\r\n      transform: rotate(-5deg);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 575px) {\r\n    svg#rocket-smoke {\r\n      display: none;\r\n      visibility: hidden;\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"toolbar\" role=\"banner\">\r\n    <h1>File Downloader 3000!!!</h1>\r\n</div>\r\n\r\n<div class=\"content\" role=\"main\">\r\n  <app-downloads></app-downloads>\r\n  <footer></footer>\r\n\r\n  <img id=\"clouds\" src=\"assets/svgs/clouds.svg\" alt=\"\" />\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-ea01bb3445da6288a19c752d16eb150e9dbb019f03e42d4dd9632dd5f310abd79930f2f074a9a333fce67a1025f473ba763ee78923f94af4b10cf732c75fcf9a",
            "file": "src/app/components/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "MultiCheckboxState",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "stateChanged",
                    "defaultValue": "new EventEmitter<MultiCheckboxState>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when the state of the checkbox is changed\n\n",
                    "description": "<p>Fires when the state of the checkbox is changed</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 640,
                                "end": 647,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { MultiCheckboxState } from './checkbox.model';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  @Input() state!: MultiCheckboxState;\r\n  @Output() stateChanged = new EventEmitter<MultiCheckboxState>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.state == null) {\r\n      this.state = MultiCheckboxState.Empty;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fires when the state of the checkbox is changed\r\n   *\r\n   * @returns {void}\r\n   * @memberof CheckboxComponent\r\n   */\r\n   changeState(): void {\r\n    this.stateChanged.emit(this.state);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/styles.scss';\r\n\r\n:host {\r\n    .full, .partial, .empty {\r\n        cursor: pointer;\r\n        height: 20px;\r\n        width: 20px;\r\n        box-shadow: 0 2px 4px 0 rgba(173,181,189,0.23);\r\n        border-radius: 50%;\r\n    }\r\n\r\n    .full {\r\n        background: $app-color-primary;\r\n    }\r\n\r\n    .partial {\r\n        border-width: 3px;\r\n        border-color: $app-color-primary;\r\n        border-style: solid;\r\n    }\r\n\r\n    .empty {\r\n        border-width: 3px;\r\n        border-color: gray;\r\n        border-style: solid;\r\n    }\r\n}",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [class]=\"state\" (click)=\"changeState()\"></div>"
        },
        {
            "name": "DownloadsComponent",
            "id": "component-DownloadsComponent-86d283363dc7fedce220a2e2463a987bdfe916b18fe1cfc9ac133d5e0b3973d82ac41f33700a8fba323431541897876135e972cb36a9068d6e1743aa6da8ff5f",
            "file": "src/app/components/downloads/downloads.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-downloads",
            "styleUrls": [
                "./downloads.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./downloads.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "filesService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FilesService",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "fileSubscription",
                    "defaultValue": "new Subscription",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "selectedFiles",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "showModal",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "handleDialogDisplay",
                    "args": [
                        {
                            "name": "display",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when clicking to display the modal dialog\n\n",
                    "description": "<p>Fires when clicking to display the modal dialog</p>\n",
                    "jsdoctags": [
                        {
                            "name": "display",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1471,
                                "end": 1478,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "handleSelectionClick",
                    "args": [
                        {
                            "name": "e",
                            "type": "MultiCheckboxState",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFires when multistatte checkbox is clicked\n\n",
                    "description": "<p>Fires when multistatte checkbox is clicked</p>\n",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "MultiCheckboxState",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "tagName": {
                                "pos": 1120,
                                "end": 1127,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "",
                            "returnType": "void"
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FilesService } from '../../services/files.service';\nimport { File, FileStatus } from '../../interfaces/file';\nimport { MultiCheckboxState } from '../checkbox/checkbox.model';\n\n@Component({\n  selector: 'app-downloads',\n  templateUrl: './downloads.component.html',\n  styleUrls: ['./downloads.component.scss']\n})\nexport class DownloadsComponent implements OnDestroy, OnInit {\n  filesService: FilesService;\n  files: File[] = [];\n  subscriptions: Subscription[] = [];\n  selectedFiles: File[] = [];\n  fileSubscription: Subscription = new Subscription;\n  showModal: boolean = false;\n\n  constructor(filesService: FilesService) {\n    this.filesService = filesService;\n  }\n\n  ngOnInit(): void {\n    this.fileSubscription = this.filesService.getFiles().subscribe(response => {\n      this.files = response;\n    })\n\n    this.subscriptions.push(this.fileSubscription);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Fires when multistatte checkbox is clicked\n   *\n   * @returns {void}\n   * @memberof DownloadsComponent\n   */\n  handleSelectionClick(e: MultiCheckboxState): void {\n    if (e === MultiCheckboxState.Empty || e === MultiCheckboxState.Partial) {\n      this.selectedFiles = this.files;\n    } else {\n      this.selectedFiles = [];\n    }\n  }\n\n  /**\n   * Fires when clicking to display the modal dialog\n   *\n   * @returns {void}\n   * @memberof DownloadsComponent\n   */\n  handleDialogDisplay(display: boolean): void {\n    this.showModal = display;\n  }\n\n  /**\n   * The row selection state of the table\n   *\n   * @returns {MultiCheckboxState}\n   * @memberof DownloadsComponent\n   */\n  get tableState(): MultiCheckboxState {\n    if (this.selectedFiles.length === 0) {\n      return MultiCheckboxState.Empty;\n    }\n\n    if (this.selectedFiles.length === this.files.length) {\n      return MultiCheckboxState.Full;\n    }\n\n    return MultiCheckboxState.Partial;\n  }\n\n  /**\n   * The number of files currently selected\n   *\n   * @returns {number}\n   * @memberof DownloadsComponent\n   */\n  get selectedFileCount(): number {\n    return this.selectedFiles.length;\n  }\n\n  /**\n   * The number of files currently selected that are not available\n   *\n   * @returns {number}\n   * @memberof DownloadsComponent\n   */\n   get selectedUnavailableFileCount(): number {\n    return this.selectedFiles.filter(f => f.status !== FileStatus.Available).length;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../styles/overrides.scss';\r\n\r\n:host {\r\n    width: 100%;\r\n\r\n    ::ng-deep .p-datatable-header > div {\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        > label {\r\n            margin-left: 1rem;\r\n        }\r\n\r\n        > div.download {\r\n            display: flex;\r\n            justify-content: center;\r\n\r\n            img {\r\n                width: 1rem;\r\n            }\r\n        }\r\n\r\n        > div {\r\n            margin-left: 2rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    // @NOTE: Dialog classes, should be kept seperate\r\n    .message {\r\n        font-size: small;\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    .notavailable {\r\n        color: $app-color-warning;\r\n        cursor: default !important;\r\n    }\r\n\r\n    .downloads {\r\n        display: grid;\r\n        grid-template-columns: 25% 75%;\r\n        gap: 5px;\r\n\r\n        div {\r\n            text-overflow: ellipsis;\r\n            overflow: hidden;\r\n            white-space: nowrap;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n",
                    "styleUrl": "./downloads.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "filesService",
                        "type": "FilesService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "filesService",
                        "type": "FilesService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnDestroy",
                "OnInit"
            ],
            "accessors": {
                "tableState": {
                    "name": "tableState",
                    "getSignature": {
                        "name": "tableState",
                        "type": "",
                        "returnType": "MultiCheckboxState",
                        "line": 66,
                        "rawdescription": "\n\nThe row selection state of the table\n\n",
                        "description": "<p>The row selection state of the table</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 1667,
                                "end": 1702,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 1668,
                                    "end": 1675,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 1676,
                                    "end": 1696,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 1677,
                                        "end": 1695,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 177,
                                        "typeName": {
                                            "pos": 1677,
                                            "end": 1695,
                                            "flags": 4194304,
                                            "modifierFlagsCache": 0,
                                            "transformFlags": 0,
                                            "kind": 79,
                                            "escapedText": "MultiCheckboxState"
                                        }
                                    }
                                }
                            },
                            {
                                "pos": 1702,
                                "end": 1734,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 1703,
                                    "end": 1711,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                },
                "selectedFileCount": {
                    "name": "selectedFileCount",
                    "getSignature": {
                        "name": "selectedFileCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 84,
                        "rawdescription": "\n\nThe number of files currently selected\n\n",
                        "description": "<p>The number of files currently selected</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2075,
                                "end": 2098,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 2076,
                                    "end": 2083,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 2084,
                                    "end": 2092,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 2085,
                                        "end": 2091,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 146
                                    }
                                }
                            },
                            {
                                "pos": 2098,
                                "end": 2130,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 2099,
                                    "end": 2107,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                },
                "selectedUnavailableFileCount": {
                    "name": "selectedUnavailableFileCount",
                    "getSignature": {
                        "name": "selectedUnavailableFileCount",
                        "type": "number",
                        "returnType": "number",
                        "line": 94,
                        "rawdescription": "\n\nThe number of files currently selected that are not available\n\n",
                        "description": "<p>The number of files currently selected that are not available</p>\n",
                        "jsdoctags": [
                            {
                                "pos": 2295,
                                "end": 2318,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 339,
                                "tagName": {
                                    "pos": 2296,
                                    "end": 2303,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "returns"
                                },
                                "comment": "",
                                "typeExpression": {
                                    "pos": 2304,
                                    "end": 2312,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 307,
                                    "type": {
                                        "pos": 2305,
                                        "end": 2311,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 1,
                                        "kind": 146
                                    }
                                }
                            },
                            {
                                "pos": 2318,
                                "end": 2350,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 325,
                                "tagName": {
                                    "pos": 2319,
                                    "end": 2327,
                                    "flags": 4227072,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "memberof"
                                },
                                "comment": "<p>DownloadsComponent</p>\n"
                            }
                        ]
                    }
                }
            },
            "templateData": "<div>\n    <p-table [value]=\"files\" selectionMode=\"multiple\" [(selection)]=\"selectedFiles\">\n        <ng-template pTemplate=\"caption\">\n            <div>\n                <app-checkbox [state]=\"tableState\" (stateChanged)=\"handleSelectionClick($event)\"></app-checkbox>\n                <label *ngIf=\"!selectedFileCount\">None Selected</label>\n                <label *ngIf=\"selectedFileCount\">Selected {{ selectedFileCount }}</label>\n                <div *ngIf=\"selectedFileCount\" class=\"download\" (click)=\"handleDialogDisplay(true)\"><img src=\"assets/svgs/download.svg\" alt=\"Download selected files\" />Download Selected</div>\n            </div>\n        </ng-template>\n        <ng-template pTemplate=\"header\">\n            <tr>\n                <th></th>\n                <th>Name</th>\n                <th>Device</th>\n                <th>Path</th>\n                <th>Status</th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-file>\n            <tr [pSelectableRow]=\"file\">\n                <td>\n                    <p-tableCheckbox [value]=\"file\" (click)=\"$event.stopPropagation()\"></p-tableCheckbox>\n                </td>\n                <td>\n                    {{ file.name }}\n                </td>\n                <td>\n                    {{ file.device }}\n                </td>\n                <td>\n                    {{ file.path }}\n                </td>\n                <td>\n                    <app-downloads-status [status]=file.status></app-downloads-status>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n\n    <!-- @TODO: Make a component that wraps this for reusability -->\n    <p-dialog header=\"File Downloads\" [(visible)]=\"showModal\" [style]=\"{width: '50vw'}\" [modal]=\"true\" [draggable]=\"false\">\n        <!-- BUSINESSRULE: Only those that have a status of \"available\" are currently able to be downloaded. Your implementation should manage this. -->\n        <div  *ngIf=\"selectedUnavailableFileCount\" class=\"message\">File(s) in <span class=\"notavailable\">red</span> are not available to be downloaded.</div>\n\n        <div class=\"downloads\">\n            <ng-container *ngFor=\"let file of selectedFiles\">\n                <div title=\"{{ file.device }}\" [ngClass]=\"{'notavailable': file.status !== 'available'}\">{{ file.device }}</div>\n                <div *ngIf=\"file.status !== 'available'\" title=\"{{ file.path }}\" class=\"notavailable\">{{ file.path }}</div>\n                <div *ngIf=\"file.status === 'available'\" title=\"{{ file.path }}\"><a>{{ file.path }}</a></div>\n            </ng-container>\n        </div>\n        <ng-template pTemplate=\"footer\">\n            <p-button label=\"Close\" styleClass=\"p-button-text\" (click)=\"handleDialogDisplay(false)\"></p-button>\n        </ng-template>\n    </p-dialog>\n</div>\n"
        },
        {
            "name": "DownloadsStatusComponent",
            "id": "component-DownloadsStatusComponent-ded162f2b24fd8c0ed85fe1ba2ca4a3dc3a44325e23683820e977869f39c35ba3af89b84d76d7b4f2894dbbf7cb9627fd2ddbf204fbf98766cdaa4d918772bdd",
            "file": "src/app/components/downloads/status/downloads-status/downloads-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-downloads-status",
            "styleUrls": [
                "./downloads-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./downloads-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "status",
                    "defaultValue": "FileStatus.Unknown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "FileStatus",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FileStatus } from '../../../../interfaces/file';\n\n@Component({\n  selector: 'app-downloads-status',\n  templateUrl: './downloads-status.component.html',\n  styleUrls: ['./downloads-status.component.scss']\n})\nexport class DownloadsStatusComponent {\n  @Input() status: FileStatus = FileStatus.Unknown;\n\n  constructor() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../../styles/styles.scss';\r\n\r\n:host {\r\n    .downloads-status {\r\n        text-transform: capitalize;\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        .indicator {\r\n            min-height: 20px;\r\n            min-width: 20px;\r\n\r\n            &.available {\r\n                background-color: $app-color-status-good;\r\n                border-radius: 50%;\r\n                display: inline-block;\r\n            }\r\n        }\r\n\r\n        label {\r\n            padding-left: 1rem;\r\n        }\r\n    }\r\n}",
                    "styleUrl": "./downloads-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div class=\"downloads-status\">\n    <span class=\"indicator\" [ngClass]=\"{'available': status === 'available'}\"></span>\n    <label>{{ status }}</label>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-de5f6139bcc5bddf480bd3fd91ac4f365528e5fa52d34765b8d530e9d6da558aefa5fd626b6827629bedb071895dd12fb19d2441aa51dcda8b556dbcd09909e7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { TableModule } from 'primeng/table';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\r\nimport { DownloadsComponent } from './components/downloads/downloads.component';\r\nimport { DownloadsStatusComponent } from './components/downloads/status/downloads-status/downloads-status.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    CheckboxComponent,\r\n    DownloadsComponent,\r\n    DownloadsStatusComponent,\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    ButtonModule,\r\n    DialogModule,\r\n    HttpClientModule,\r\n    TableModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "DownloadsComponent"
                        },
                        {
                            "name": "DownloadsStatusComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Full",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Partial",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/checkbox/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "FileStatus",
                "childs": [
                    {
                        "name": "Scheduled",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "scheduled"
                    },
                    {
                        "name": "Available",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "available"
                    },
                    {
                        "name": "Unknown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "unknown"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/interfaces/file.ts"
            },
            {
                "name": "MultiCheckboxState",
                "childs": [
                    {
                        "name": "Empty",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "empty"
                    },
                    {
                        "name": "Disabled",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "disabled"
                    },
                    {
                        "name": "Full",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "full"
                    },
                    {
                        "name": "Partial",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "partial"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/components/checkbox/checkbox.model.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/components/checkbox/checkbox.stories.ts": [
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Full",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Partial",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/checkbox/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/interfaces/file.ts": [
                {
                    "name": "FileStatus",
                    "childs": [
                        {
                            "name": "Scheduled",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "scheduled"
                        },
                        {
                            "name": "Available",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "available"
                        },
                        {
                            "name": "Unknown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "unknown"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/interfaces/file.ts"
                }
            ],
            "src/app/components/checkbox/checkbox.model.ts": [
                {
                    "name": "MultiCheckboxState",
                    "childs": [
                        {
                            "name": "Empty",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "empty"
                        },
                        {
                            "name": "Disabled",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "disabled"
                        },
                        {
                            "name": "Full",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "full"
                        },
                        {
                            "name": "Partial",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "partial"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/components/checkbox/checkbox.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Full",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Partial",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/downloads/downloads.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DownloadsComponent",
                "coveragePercent": 16,
                "coverageCount": "2/12",
                "status": "low"
            },
            {
                "filePath": "src/app/components/downloads/status/downloads-status/downloads-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DownloadsStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/data-response.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataResponse",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/interfaces/file.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "File",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/services/files.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FilesService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}